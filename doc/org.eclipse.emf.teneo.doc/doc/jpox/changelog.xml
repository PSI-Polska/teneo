<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright 2005-2006, Elver.org (http://www.elver.org).

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

		http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->

<!--
	@author <a href="mtaal@elver.org">Martin Taal</a>
	@version $Revision: 1.1 $ $Date: 2006/08/03 09:58:08 $
-->

<!DOCTYPE document PUBLIC
	"-//APACHE//DTD Documentation V2.0//EN"
	"http://forrest.apache.org/dtd/document-v20.dtd">

<document> 
	<header> 
		<title>Changelog</title> 
	</header> 
	<body>
		<p>Gives an overview of changes in different releases over time</p>
		<p></p>
		<p>
		<strong>Release: 0.7.5 ALPHA - 27 Augustus 2006</strong>
		</p>
		<ul>
			<li>Changed default column names for version and synthetic id to e_version and e_id. These names should be valid for most databases and prevent nameclashes.</li>
		</ul>
		<p></p>
		<p>
		<strong>Release: 0.7.2 ALPHA - 7 June 2006</strong>
		</p>
		<ul>
			<li><strong>Changed source of annotations</strong>: ejb3 annotation now use ejb.elver.org, Elver specific annotation now use
			annotation.elver.org. For backward compatibility all ejb annotations can also still be used together with 
			annotation.elver.org.</li>
			<li>The JPOX libraries have been moved to a separate plugin: org.elver.store.jpox.libraries.</li> 
			<li><strong>All table and column names are now in lowercase.</strong> The casing can be controlled with an option
			(see <a href="jpoxdatastore.html#options">here</a>).</li>
			<li>Cleaned up the interface for setting properties and getting the session from a HbDataStore. The pm should now be retrieved from the
			PersistenceManagerFactory which can be retrieved from the JpoxDataStore.</li>
			<li>Multiple mapped super classes in the inheritance tree were not supported, this has been fixed now.</li>
			<li>Unique attribute on eattributes is now used to generate a unique constraint</li>
			<li>Changed the format of the Elver specific Unique annotation (see <a href="jpox_details.html#Force+a+join+table+for+1%3An+relations">here</a>)</li>
			<li>Added support for annotations on EDataType (see <a href="ejb3_features.html#edatatype">here</a>)</li>
			<li>Solved issue with support array of primitive type, this should now work. This means also that blob is now 
			supported.</li>
			<li>List with primitive non-object type is now handled correctly.</li>
			<li>Added modest support for multiple inheritance , (see <a href="inheritance.html#Multiple+Inheritance+Support">here</a>)</li>
			<li>Testcases are now also run using MS Sql Server 2000/2005.</li>
		</ul>
		<p></p>
		<p>
		<strong>Release: 0.7.1 ALPHA - 8 May 2006</strong>
		</p>
		<ul>
			<li>Eclipse Menu Generate JDO: folder in which package,jdo is generated is now refreshed automatically (after popupbox is closed).</li>
			<li>Eclipse Menu Generate JDO: multiple ecore files can now be selected, the mapping is stored in one package.jdo file.</li>
			<li>Solved a bug related to use of reserved words (long, float, etc.) as feature names</li>
			<li>JoinColumns were not supported correctly, has been fixed, thanks to Douglas Bitting for providing the patch.</li>
		</ul>
		<p></p>
		<p>
		<strong>Release: 0.7.0 ALPHA - 21 April 2006</strong>
		</p>
		<p>This release is a major rewrite compared to the previous release. This release is not backward compatible, 
		mapping logic as well as interfaces have changed.
		An overview of the changes/new features:</p>
		<ul>
			<li>OR Mapping is now done on the basis of the ecore model (EPackages), source code is not parsed anymore, 
			see <a href="overview.html">the overview</a>. The package.jdo is now generated in the same location as the 
			ecore file.</li>
			<li>Support for ejb3 like annotations such as mapped superclass, composite id, UniqueConstraint etc. see 
			<a href="overview.html#ejb3">here</a>.</li>
			<li>Added support for different class loader strategies, see <a href="jpox_details.html">here</a>.</li>
			<li>Solved issues related to nullability of enum fields and using enums in primary keys.</li>
			<li>Added option to control if the database schema is updated at startup, see <a href="jpoxdatastore.html#options">here</a>.</li>
			<li>Added new sections to the website: an overview, related to ejb3, options, etc.</li>
			<li>Upgraded to EMF 2.2 and JPOX 1.1rc1.</li>
			<li>Added eager loading of containment relations, is controlled by annotation, default 
			behavior is lazy and not eager</li>
			<li>Tracking modification on a resource does now work with lazy loading. Before setting
			tracking modification to true (or add an adapter) ment that the whole resource was loaded,
			this is now not required anymore.</li>
			<li>Cut and paste in a the editor is now supported by setting the Cascade annotation, see
			<a href="jpox_details.html#cutpaste">here</a>.</li>
			<li>The package.jdo can now more easily be generated programmatically, 
			see <a href="jpoxdatastore.html#Programmatic+generation+of+package.jdo">here</a>. This can be usefull when you want to map
			multiple epackages and have better control over the generation process.</li>
			<li>Main things which have been changed since the 0.6.5 release:
			<ul>
			<li>JPOXHelper has been renamed to JpoxHelper, cleaned up the interface, introduced concept of a JpoxDataStore,
			see <a href="jpoxdatastore.html">here</a>.</li>
			<li>FeatureMap support without generating additional source files, see <a href="featuremap.html">here</a>.</li>
			<li>The options which can be passed to the Elver runtime have been restructured, see 
			<a href="jpoxdatastore.html#options">here</a>.</li>
			<li>The previous annotations for inheritance mapping and unique have changed. see 
			<a href="inheritance.html">here</a> and <a href="jpox_details.html#Force+a+join+table+for+1%3An+relations">here</a>.</li>
			<li>Added option to set all containment lists to eager loading, see <a href="jpoxdatastore.html#options">here</a>.</li>
			<li>The JPOXResource class is no longer used, only the JPOXResourceDAO resource should be used, see 
			<a href="jpoxresources.html">here</a>.</li>
			</ul></li>
		</ul>
		<p></p>
		<p>
		<strong>Release: 0.6.5 (15 November 2005)</strong>
		</p>
		<p>List of changes:</p>
		<ul>
			<li>Annotations can be used to enforce a join table also for 1:n relations, see 
			<a href="jpox_details.html#Force+a+join+table+for+1%3An+relations">here</a>.
			</li>
			<li>It can now be specified using an annotation that a member is an 
		identifier for which jpox (or the database) must generate unique values, 
			see <a href="jpox_details.html#Identifier+fields">here</a>.</li>
			<li>Solved an issue related to null-pointer exceptions when abstract types 
refered to eachother.</li>
			<li>Solved an issue which is related to types with interface="true" this issue
resulted in missing model fields in the mapping file.</li>
			<li>Upgraded to qdox 1.6, now also jdk1.5 constructions are supported when 
			generating a mapping file.</li>
			<li>Upgraded to the jpox libraries of 29 October and jdo snapshot7.</li>
		</ul>
		<p></p>
		<p>
		<strong>Release: 0.6.4 (24 October 2005)</strong>
		</p>
		<p>List of changes:</p>
		<ul>
			<li>Enabled superclass-table inheritance mapping strategy for JPOX. Now both
			new-table as well as super-class table are supported. These two
			options have been added to the elver submenu in the Eclipse plugin. See 
				<a href="http://www.jpox.org/docs/1_1/inheritance.html">this page</a> on the
			jpox website for a description of these different inheritance mapping strategies.</li>
			<li>It is now possible to control the inheritance mapping for each class hierarchy
			by adding specific annotations in the model, see <a href="inheritance.html">here</a> for more 
			information.</li>
			<li>The creation of a persistence manager factory can be controlled by registering
				a persistence manager factory creator. This allows you to override the creation
				of the persistence manager factory and persistence managers. 
				See <a href="jpox_details.html#Registering+a+Persistence+Manager+Factory+Creator">here</a>
			for more information.</li>
			<li>A new createRegisterPersistenceManagerFactory method
			has been added which just expects a property map. This is more flexible than the 
			other createRegisterPersistenceManagerFactory methods.</li>
			<li>Solved issue: in case a featuremap member was declared in a superclass then 
			when the subclass is used JPOX could not find the class to use as featuremap
				entry for the featuremap (specified in the superclass).</li>
			<li>Upgraded to the latest versions of JPOX (22 October 2005). Note also upgraded the
			jdo jar to the latest version (23 October 2005).</li>
			<li>Notifications are now send out when an elist/featuremap is loaded (see 
				<a href="jpox_details.html#EList%2FFeaturemap+load+notification">here</a>).</li>
			<li>Resource trackingModification is not automatically enabled anymore at load time, the client should
			do this explicitly. The reason for this is that tracking modification is an expensive operation
			because it walks the complete containment tree.</li>
			<li>The OR Mapping file generator will now also specify the tablename. The tablename
			is based on the classname of the persisted entity.</li>
			<li>Source code is distributed together with the jar files.</li>
		</ul>
		<p></p>
		<p>
		<strong>Release: 0.6.3 (10 October 2005)</strong>
		</p>
		<p>List of changes:</p>
		<ul>
			<li>Solved incorrect setting of container when a type can be contained through
			more than one feature in another type.</li>
			<li>Containment of featuremap entries was not set correctly, is solved now</li>
			<li>Added setContainer function (to JPOXHelper): when a child object is read directly from
			the database its container is not set. To offer a generic workaround
			this function allows you to explicitly
			set the container of an object, (see <a href="jpoxdatastore.html">here</a> 
			for more information)</li>
			<li>Added getCrossReferencers function, this allows one to find all the 
			referers to an eobject in the database, (see <a href="jpoxdatastore.html">here</a> 
			for more information). This can for example be used to check all delete constraints 
			before an EObject is deleted.</li>
		</ul>
		<p></p>
		<p>
		<strong>Release: 0.6.2 (30 September 2005)</strong>
		</p>
		<p>List of changes:</p>
		<ul>
			<li>Solved a bug related to showing incorrect top level objects in a resource. 
		This was visible in the EMF editor because contained objects were displayed in the
		top of the editor. Credits to Pawel Sabina for identifying this issue and helping
		to solve it.</li>
			<li>Solved a bug related to lazy loading of elists in the editor, the bug 
			resulted in multiple copies of one object being loaded. This would result
			in a dangling reference validation error when saving the resource. This is 
			solved now. Thanks to Pawel Sabina for identifying this issue and helping
		to solve it.</li>
			<li>Added possibility of XMI import and export to the resource utility. XMI 
		is more powerful than the XML export/import because XMI 
		supports multiple root objects when exporting/importing.
		 See <a href="resource_utility.html">here</a></li>
			<li>Customize the load behavior of JPOXResourceDAO (see <a href="jpoxresources.html">here</a>):
		<ul>
		<li>The implementation of the 
		JPOXResourceDAO has been changed so that the load behavior can be overridden by subclassing.</li>
		<li>The load behavior of the JPOXResourceDAO can also be controlled by 
			passing queries in the url or in the ejdo file.</li>
		</ul>
		</li>
		<li>Updated to the jpox libraries of 28 September 2005.</li>
		</ul>
		<p></p>
		<p>
		<strong>Release: 0.6.1 (28 September 2005)</strong>
		</p>
		<p>List of changes:</p>
		<ul>
			<li>When you use EMF FeatureMaps then you need to regenerate your package.jdo file!</li>
			<li>The plugin structure has been improved, more functions have been moved to 
			a generic plugin (org.elver.store).</li>
			<li>ELists/FeatureMaps are now lazily loaded. This is especially usefull in
				case you directly read objects through JDOQL queries. For the JPOXResourceDAO,
				containment elists are not lazily loaded, non-containment elists are lazily loaded.
				The JPOX DAO Resource is
		now the preferred resource implementation. References to the other standard JPOX Resource have been
		removed. See <a href="jpoxresources.html">JPOX Resources</a>.</li>
			<li>The resource utility has been slightly improved. Now it is possible to validate the contents 
		by explicitly selecting the validate option.</li>
		</ul>
		<p></p>
		<p>
		<strong>Release: 0.6.0.1 (19 September 2005)</strong>
		</p>
		<p>List of changes:</p>
		<ul>
			<li>Solved 'unnecessary' join tables: for non-contained 1:n relations 
			join tables were generated. This is only required if double entries are allowed
			in a 1:n relation. Currently EMF does not allow double entries in ELists. The join
			table is therefore not required and will not be generated anymore.
			</li>
			<li>The package.jdo was incorrect in some cases, the order of a foreign-key and order
			element was wrong. Solved in this release.
			</li>
			<li>Solved an issue which occured when an already persisted object was added to
			the collection of a new object.</li>
			<li>Upgraded to the latest jpox libraries</li>
		</ul>
		<p></p>
		<p>
		<strong>Release: 0.6.0 (15 September 2005)</strong>
		</p>
		<p>List of changes:</p>
		<ul>
			<li>Added Resource Utility plugin to directly open a resource and to 
			import and export XML. The utility is very basic but will be extended in the future.
			See <a href="resource_utility.html">here</a> for more information.
			</li>
			<li>Solved the following issue: in some cases feature map members where not recognized
		by the OR mapper and a primitive type field tag was generated instead of a field 
		collection tag.</li>
			<li>Made the registration of persistence manager factories a bit more relaxed,
		if a pmf was already registered under a certain name then that one is returned instead
		of throwing an exception directly.</li>
		<li>Updated the troubleshooting page (added note about org.eclipse.osgi.framework.debug.Debug.DEBUG_GENERAL)</li>
		<li>Automatically create columns: it is possible that JPOX does not automatically create 
		new columns, this should now work better (but not guaranteed to work perfectly).</li>
		<li>Many small updates to the website</li>
		<li>Made the solution more robust for strange lower and uppercase issues of generated
		java member names (EMF will for example convert a XML Schema name of VAT to a vAt java member)</li>
		<li>Added automatic validation of the save action of JPOX Resources, see <a href="jpoxresources.html">here</a>.</li>
		<li>Added a number of testcases</li>
		</ul>
		<p></p>
		<p>
		<strong>Release: 0.6.0 (7 September 2005)</strong>
		</p>
		<p>List of changes:</p>
		<ul>
			<li>EPackages are now specifically assigned to a relational store
			(a persistence manager factory). This solves the following issue: when running
			different epackages in one eclipse installation then the tables for
			one epackage were also created in the database of other epackages. To solve this,
			the initialization of the persistency layer has changed. Summary of changes:
			<ul>
				<li>The JPOXInitializer class has been removed. All initialization is done
		through the JPOXHelper class</li>
				<li>EPackage parameter has been added to the create persistency manager methods in 
		JPOXHelper</li>
				<li>A number of static methods in JPOXHelper have been replaced by 
		their INSTANCE equivalent, this is more inline with the other methods in this
					class.</li>
			</ul>
			</li>
			<li>Added a separate page on different aspects of <a href="upgrading.html">upgrading</a> 
			the plugins.</li>
			<li>Added support for xsd:list and xsd:union. One exception is 
			xsd:union of enumerated types</li>
			<li>Updated troubleshooting page</li>
			<li>Solved an issue (sql Duplicate Column Exception) in the OR Mapper 
			which occurs when a type was contained by two other types through multi-occurence 
				relations. The OR Mapper
			now generates unique column names for this case.</li>
			<li>Solved an issue in the JPOXResourceDAO resource which occured when an object was
			deleted together with its contained child objects. This issue was visible in the
			generated EMF editor with the message in the errorlog: 
			transient objects can not be deleted....</li>
			<li>Added number of testcases</li>
			<li>Upgraded to the JPOX libraries of 6th of September 2005</li>
		</ul>
		<p></p>
		<p>
		<strong>Release: 0.5.5 (30 August 2005)</strong>
		</p>
		<p>List of changes:</p>
		<ul>
			<li>Added/tested support for the following XML Schema structures 
				(see <a href="features_details.html">here</a> for details):
			<ul>
				<li>Substition groups are now supported (see <a href="substitution.html">here</a>)</li>
				<li>xsd:all, xsd:group and repeating xsd:group and repeating xsd:sequence</li>
				<li>ecore:featureMap, ecore:mixed on xsd:element and xsd:complexType</li>
				<li>different types of xsd:attributes</li>
			</ul></li>
			<li>Solved a bug when a featuremap was used in an editor with copy and paste actions.
				In this case after editing and saving a pasted document twice a classcastexception
				was thrown. This is now solved.</li>
			<li>FeatureMap support has been improved, the system now also supports feature map
			entries with an interface, list or java.lang.Object type.</li>
			<li>Added support for most (95%) ecore xml primitive types</li>
			<li>Disabled naming of foreign keys/unique constraints, this gave sql errors when databases and tables were created.</li>
			<li>Refined persistence of 'indirect' fields (suchas ..eset fields)</li>
			<li>Added number of testcases, tests are now also done for postgresql</li>
			<li>Upgraded to the latest version of JPOX</li>
		</ul>
		<p></p>
		<p>
		<strong>Release: 0.5.5 (23 August 2005)</strong>
		</p>
		<p>List of changes:</p>
		<ul>
			<li>Changed naming of classes and tables generated for FeatureMap Entries.</li>
			<li>Update of EList through iterators is now possible</li>
			<li>Solved bug in FeatureMap which resulted in double entries in the database when
			moving and adding items to a FeatureMap (reported by Georgi Manev)</li>
			<li>Added support for xsd:any and xsd:anyType, see <a href="anytype.html">here</a> for more information</li>
			<li>Solved smaller issues in EList and FeatureMap</li>
			<li>Added number of testcases, e.g. to test EList and FeatureMap in the JPOXResources (detached)</li>
			<li>Upgraded to the latest version of JPOX</li>
		</ul>
		<p></p>
		<p>
		<strong>Release: 0.5.5 (19 August 2005)</strong>
		</p>
		<p>List of changes:</p>
		<ul>
			<li>Smaller changes to OR mapper: handling of unsettable attributes is improved,
				handling of default values is moved to the EMF layer.</li>
			<li>Issue solved in JPOX ResourceDAO: when an object is present in multiple Elists then
			the JPOXResourceDao would sometimes load multiple versions of the same database entry
			in memory. This is solved now.</li>
			<li>Support for inheritance structures has been improved and has been tested more thoroughly,
				for example:
				<ul>
				<li>EList defined as containing (abstract) superclass can contain subclasses</li>
				<li>Querying on superclass returns also subclass instances</li>
				</ul>
			</li>
			<li>Mixed content (featuremap) is now supported</li>
			<li>There is now confirmed/tested support for the following XML Schema constructions: 
				<ul>
				<li>Restriction of simple type</li>
				<li>Extension of complextype, from simple as well as other complex type</li>
				<li>Inheritance using abstract supertype and extensions from complextype</li>
				<li>xsd:IDREFS as the type of an element (xsd:IDREF and xsd:anyURI were already supported)</li>
				<li>Reference (single and multi-occurence) to abstract type</li>
				<li>nillable facet</li>
				<li>mixed="true" on complex type</li>
				</ul>
			</li>
			<li>Changed the website on various locations: 
				added <a href="featuremap.html">description about FeatureMap support</a>, 
				added <a href="features_details.html">detailed description of XML Schema support</a>, 
				added <a href="links.html">links to interesting web articles</a>
			</li>
			<li>Added a number of testcase for the above new features</li>
		</ul>
		<p></p>
		<p>
		<strong>Release: 0.5.5 (17 August 2005)</strong>
		</p>
		<p>List of changes:</p>
		<ul>
			<li>Solved issue: Eclipse crashed when the OR Mapper was run for the first time on a package. This behavior was encountered on 
		a Linux system.</li>
		</ul>
		<p></p>
		<p>
		<strong>Release: 0.5.5 (16 August 2005)</strong>
		</p>
		<p>List of changes:</p>
		<ul>
			<li>Added support for feature map (alpha version, currently supports xsd:choice with maxOccurs="unbounded")</li>
			<li>Allow hiding of concrete class names</li>
			<li>Added testcases (for example the books.xsd from JAXB, see <a href="http://java.sun.com/developer/technicalArticles/WebServices/jaxb/">here</a>).
			</li>
			<li>Refined the OR Mapper in various locations</li>
			<li>Changed the distribution of the runtime layer and jpox jars to a plugin instead of list of separate jars (see the download
		and installation page), directions provided by Georgi Manev.</li>
			<li>Updated the website in various locations: 
				<ul>
				<li>Changed the library tutorial on a number of places (setting the resource factory, using runtime plugin, hiding implementation classes)</li>
				<li>Changed download and installation page (runtime layer as plugin, updating of already installed plugin is possible)</li>
				<li>Added page with list of xsd's which are used as test case (see <a href="schema_list.html">here</a>)</li>
				</ul>
			</li>
			<li>Upgraded the jpox and jdo jars to their latest version (16 August 2005) see the download and 
			installation page</li>
		</ul>
		<p></p>
		<p>
		<strong>Release: 0.5.0 changes 9 August 2005</strong>
		</p>
		<p>The following changes were made on 9 August 2005 (to solve an issue reported by Aaron Oathout):</p>
		<ul>
			<li>Small changes to the OR Mapper plugin</li>
			<li>Upgraded the jpox and jdo jars to their latest version (9 August 2005) see the download and 
			installation page</li>
			<li>Updated the website on various locations</li>
		</ul>
		<p>It is discussed separately how to upgrade the plugin on <a href="installation.html">the installation page</a>.</p>
		<p></p>
		<p>
		<strong>Release: 0.5.0 build 08082005 of Runtime jar</strong>
		</p>
		<p>Changes since 0.5.0 release:</p>
		<ul>
			<li>No dependencies anymore on EObjectImpl, EMF Objects are only required to implement the interface
			org.eclipse.emf.ecore.InternalEObject</li>
			<li>Solved bug which occured when a new EMF object is added to an already detached object. In this
			case the new EMF object was not detached. Only occured when using the JPOXResourceDAO. Issue
			reported and solution proposed by Georgi Manev.</li>
		</ul>
	</body>
</document>
