<?xml version="1.0"?>
<!--
	Copyright (c) 2005, 2006 Springsite BV (The Netherlands) and others
	All rights reserved. This program and the accompanying materials
	are made available under the terms of the Eclipse Public License v1.0
	which accompanies this distribution, and is available at
	http://www.eclipse.org/legal/epl-v10.html
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN" "http://forrest.apache.org/dtd/document-v20.dtd">
<document> 
  <header> 
    <title>Upgrading EMF - JPOX/JDO Plugins</title> 
    <abstract>Describes specific aspects of upgrading the EMF - JPOX/JDO plugins
    </abstract> 
  </header> 
  <body> 
  	<section>
  		<title>Upgrading to Teneo</title>
  		<p>The Teneo plugins have different names and ids than the Elver plugins. This means that if you 
  		install Teneo plugins that they will coexist next to the installed Elver plugins. This should not
  		be a problem but can lead to confusion because the classnames (without the package names) have stayed the
  		same (for example JpoxDataStore is called the same in Teneo and in Elver).</p>
  		<p>There is no automatic removal of Elver plugins, this has to be done manually (see below).</p>
  	</section>
  	<section>
  		<title>Upgrading to the 0.7.0 release</title>
  		<p>To upgrade to the new release you need to do Help > Software Updates > Find and Install and then choose the option
  		'Search for new features to install'.</p>
  		<p><strong>After upgrading you need to manually disable the previous version of JPOX.</strong> This can be done by going to the
  		menu option: Help > Software Updates > Manage Configuration. Select the previous EMF - JPOX plugin version and choose disable
  		on the right.</p>
  		<figure src="images/disable.gif" alt="Disable feature"/>
  	</section>
  	<section>
  		<title>Changes from the 0.6.5 to the 0.7.0 release</title>
  		<p>In the 0.7.0 release many parts of the solution have been rewritten. An overview of the changes: </p>
  		<ul>
			<li>JPOXHelper has been renamed to JpoxHelper, its interface has been cleaned up, introduced concept of a JpoxDataStore,
			see <a href="jpoxdatastore.html">here</a>.</li>
			<li>FeatureMap support without generating additional source files, see <a href="featuremap.html">here</a>.</li>
			<li>The options which can be passed to the Elver runtime have been restructured, see 
			<a href="jpoxdatastore.html#options">here</a>.</li>
			<li>The previous annotations for inheritance mapping and unique have changed. see 
			<a href="inheritance.html">here</a> and <a href="jpox_details.html#Force+a+join+table+for+1%3An+relations">here</a>.</li>
			<li>Added option to set all containment lists to eager loading, see <a href="jpoxdatastore.html#options">here</a>.</li>
			<li>The JPOXResource class is no longer used, only the JPOXResourceDAO resource should be used, see 
			<a href="jpoxresources.html">here</a>.</li>
			</ul>
		</section>
	  <section>
	  	<title>Set the JPOX libraries for the JPOX plugin</title>
	  	<p>If a new version of the jpox libraries is present in the Elver distribution (see the
	  changelog) then you should also set the jpox libraries in windows>preferences to the new
	  jpox libraries. You can find all the required libraries in the org.elver.store.jpox.runtime[version]
	  plugin directory.</p>
	  </section>
	  <section>
	  	<title>Regenerate package.jdo after upgrading</title>
	  	<p>New functionality and bug fixes can result in changes in the generated package.jdo.
	  New versions can depend on an updated package.jdo. So after upgrading it is sometimes 
	  necessary to regenerate the package.jdo file.</p>
	  </section>
	  <section>
      <title>Upgrade through the Update Manager: Search for upgrades... or Search for new Features...</title>
     	<p>Depending on how you defined valid upgrades in 
			 <em>windows &gt; preferences &gt; Install/Updates</em>, it is possible that
			 the 'Search for Upgrades of installed features' in the update manager will
			 not find the updated EMF-JDO plugin. If this happens then the 'Search for new Features..' option
			 should be chosen in the Update Manager.
		</p>
		<p>After the Elver plugins has been downloaded the 
			 update manager will detect that the 'new' feature is in fact an upgrade of an already
			 installed feature. The old-version of the feature will automatically be disabled.
			 This is visible in the Manage Configuration function in the <em>Help &gt; Sofware Updates</em> 
			 menu.
		</p>
	 </section>
    <section>
     	<title>Changed datamodel after upgrading</title>
		<p>The OR Mapper is also updated to solve issues and add functionality. This can mean that the 
			package.jdo generated by the OR Mapper differs from one version to another. Resulting in a
			different database schema. When the database already exists from previous versions this can mean
			that the new expected database schema does not correspond with the old database schema.
		</p>
		<p>JPOX will try to correct differences by adding tables and columns. However not all changes
			can be automatically repaired (for example missing columns which control the ordering in a EList).</p>
		<p>The issues can be resolved by manually adding missing columns. Another way to resolve the above issue 
			is to start again with a new empty database.
			JPOX will then automatically create new tables which adhere to the package.jdo</p>
		<p>For the longer term we are considering to offer tools which will better facilitate this upgrade process. 
			For example to allow data to be 
		copied from the relational EMF store to a temporary XML Resource, create the new database and
		schema and then copy the information back.</p>
	</section>
  </body> 
</document>