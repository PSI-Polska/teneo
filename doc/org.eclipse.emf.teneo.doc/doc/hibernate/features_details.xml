<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright 2005-2006, Elver.org (http://www.elver.org).

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

		http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->

<!--
	@author <a href="mtaal@elver.org">Martin Taal</a>
	@version $Revision: 1.1 $ $Date: 2006/08/03 09:58:07 $
-->

<!DOCTYPE document PUBLIC
	"-//APACHE//DTD Documentation V2.0//EN"
	"http://forrest.apache.org/dtd/document-v20.dtd">

<document> 
	<header> 
		<title>Detailed Listing of Supported (EMF) XML Schema Features</title> 
	</header> 
	<body>
		<section id="xmlschema">
			<title>Supported XML Schema Structures</title>
			<p>The goal is to implement most XML Schema Structures/Datatypes supported by EMF also for the persistency layer.
		For a description of the mapping from XML Schema to EMF (ecore) 
		see <a href="http://www.eclipse.org/emf/docs/overviews/XMLSchemaToEcoreMapping.pdf">here</a>.
		In the listing below the numbers refer to the sections in this document.</p>
				<p>Note: for each feature the following remarks are used:</p>
				<ul>
				<li>Supported: means that there are test cases which show
		that the XML Schema feature is correctly translated in an ecore construction and EMF
		object and that the resulting EMF object can be persisted and retrieved.</li>
				<li>Not yet supported: means that this feature will not work and EMF objects with this 
		feature are not persisted correctly</li>
				<li>To be tested: means that this feature is expected to work but has not been tested yet</li>
				</ul>
			<p>The support by XML Schema Structure/Datatype:</p>
			<ul>
				<li>Schema (Chapter 1)
				<ul>
					<li>1.1 to 1.4: supported (not really relevant for persistency)</li>
					<li>1.5 and 1.6: DocumentRoot, currently the persistency solution will not
		persist a DocumentRoot object. The main reason for this is that the DocumentRoot is created to 
		have a starting 'folder-like' point when loading a resource. In the Elver persistency solution this
		is solved differently (see <a href="hibernateresources.html#Standard+load+behavior%3A+Top+level+types">here</a>).</li>
					<li>1.7: not relevant for persistency (is supported)</li>
				</ul></li>
				<li>Simple Type Definition (Chapter 2)
				<ul>
					<li>2.1 Simple Type with restriction: supported</li>
					<li>2.2 Simple Type with enumeration: supported</li>
					<li>2.3 and 2.4 List and Union Simple Type: list is supported, union is not yet supported</li>
					<li>2.5 Anonymous Simple Type: supported</li>
					<li>2.6 Simple Type with ecore:name: to be tested</li>
					<li>2.7 Simple Type with ecore:instanceClass: supported</li>
				</ul></li>
				<li>Complex Type Definition (Chapter 3)
				<ul>
					<li>3.1 Complex Type with extension or restriction: supported</li>
					<li>3.2 Anonymous Complex Type: supported</li>
					<li>3.3 Abstract Complex Type: supported</li>
					<li>3.4 Mixed Complex Type: supported</li>
					<li>3.5 Complex Type with ecore:name: supported</li>
					<li>3.6 Complex Type with ecore:featuremap: supported</li>
					<li>3.7 Complex Type with ecore:mixed: supported</li>
				</ul>
				</li>
				<li>Attribute declaration (Chapter 4), attributes have not been tested extensively.
		However because the java representation of EMF objects makes no difference between attributes and elements.
		The testcases for element declarations also in general apply to attribute declarations.
				<ul>
					<li>4.1 Attribute of type xsd:ID: supported</li>
					<li>4.2 Attribute of type xsd:IDREF, xsd:IDREFS, xsd:anyURI: supported</li>
					<li>4.3 Required Attribute: supported</li>
					<li>4.4 Attribute with default: to be tested</li>
					<li>4.5 Qualified Attribute: to be tested</li>
					<li>4.6 Attribute reference: supported</li>
					<li>4.7 Global Attribute: not relevant for persistence</li>
					<li>4.8 Attribute with ecore:name: supported</li>
				</ul></li>
				<li>Element Declaration (Chapter 5)
					<ul>
					<li>minOccurs/maxOccurs: all values of minOccurs and maxOccurs are supported</li>
					<li>5.1 Element of type xsd:anyType: not yet supported</li>
					<li>5.2 Element of type xsd:ID: supported</li>
					<li>5.3 Element of type xsd:IDREF, xsd:IDREFS, xsd:anyURI: supported</li>
					<li>5.4 Nillable Element: supported</li>
					<li>5.5 Element with default: supported</li>
					<li>5.6 Qualified element: to be tested</li>
					<li>5,7 Element reference: supported</li>
					<li>5.8 Global Element: not relevant for persistence</li>
					<li>5.9 Element with substitution group: supported</li>
					<li>5.10 Abstract Element: to be tested</li>
					<li>5.11 Element with ecore:name: supported</li>
					<li>5.12 Element with ecore:opposite: supported</li>
					<li>5.13 Element with ecore:featureMap: supported</li>
					</ul></li>
				<li>Model group (Chapter 6)
					<ul>
						<li>6.1 Non repeating xsd:choice: supported</li>
						<li>6.2 Repeating model group: supported</li>
						<li>6.3 Repeating model group reference: supported</li>
						<li>6.4 Model group with ecore:featureMap: supported</li>
						<li>6.5 Model group with ecore:name: supported</li>
					</ul>
				</li>
				<li>Wildcards (Chapter 7): not yet supported</li>
				<li>Annotations (Chapter 8): not relevant for persistence</li>
				<li>Predefined Schema Simple Types (Chapter 9): almost all simple types which are persistable are supported. The following types are
				not yet supported: gYear, gYearMonth, gDay, gMonthDay, duration.</li>
		</ul>
		</section>
	</body>
</document>
