<?xml version="1.0"?>
<!--
	Copyright (c) 2005, 2006 Springsite BV (The Netherlands) and others
	All rights reserved. This program and the accompanying materials
	are made available under the terms of the Eclipse Public License v1.0
	which accompanies this distribution, and is available at
	http://www.eclipse.org/legal/epl-v10.html
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN" "http://forrest.apache.org/dtd/document-v20.dtd">
<document> 
	<header> 
		<title>Format of JPA/EJB3 Annotations as EAnnotations and as XML</title> 
	</header> 
	<body>
		<p>Teneo allows two ways to specify EJB3/JPA-like annotations: 1) using the java annotations syntax 
		in EAnnotations, 2) a separate xml document.</p>
		<p>This page will show examples of both approaches.</p>
			<p>A JPA Annotation can have different targets: TYPE, METHOD and FIELD (see the EJB3/JPA spec). Annotations
			with a TYPE target can be used for EMF EClasses, annotations with METHOD and FIELD targets can be used for
			EStructuralFeatures. <em>Note:</em> JPA annotations relevant for a non-reference type java member can also be set on 
			an EDataType (see <a href="ejb3_features.html#edatatype">here</a> for more information).</p>
		<section id="target">
			<title>JPA Annotations in EAnnotations using the java annotation syntax</title>
			<p>The EAnnotations should adhere to the following format:</p>
			<ul>
			<li>The source must be: <strong>teneo.jpa</strong></li>
			<li>The key must be: <strong>appinfo</strong> or <strong>value</strong></li>
			</ul>
		</section>
		<section id="xml">
			<title>JPA Annotations in XML</title>
			<p>JPA annotations can also be specified in a separate xml file. 
			The xsd for the XML annotations can be downloaded <a href="download/persistence-mapping-hibernate.xsd">here</a>.</p>
			<p>The xsd shows that it is possible to specify annotations on EPackage, EClass, EAttribute, EReference and EDataType level.
			In addition there is a special property element which combines the annotations for EAttribute and EReference. The 
			property tag is a convenience tag which	can be used to in place of both an EAttribute and an EReference tag.</p>
			<p>When initializing a JpoxDataStore the location of the xml annotation file should be passed using the 
			persistenceoption: PersistenceOptions.PERSISTENCE_XML. The location should be a resource
			path.</p>
		</section>
		<section id="simplenokeyvalye">
			<title>Simple Annotation Example</title>
			<p>An example of an JPA annotation without a key-value pair is the Embedded annotation.</p>
			<p>In a XML Schema model the Embedded annotation is specified as follows:</p>
			<source><![CDATA[
<xsd:element name="secondEmbedded" type="this:Embeddable">
	<xsd:annotation>
		<xsd:appinfo source="teneo.jpa">@Embedded</xsd:appinfo>
	</xsd:annotation>
</xsd:element>
			]]></source>
			<p>An example of a (different) simple annotation in xml:</p>
			<source><![CDATA[			
<eclass name="Name">
	<embeddable />
</eclass>
			]]></source>			
		</section>
		<section id="simple">
			<title>Annotation with key-value</title>
			<p>An example of an EJB3 annotation with a key-value pair is the Basic annotation.</p>
			<p>In a XML Schema model the Basic annotation is specified as follows:</p>
						<source><![CDATA[
<xsd:element name="myOptionalBasic" type="xsd:string">
	<xsd:annotation>
		<xsd:appinfo source="teneo.jpa">@Basic(optional=true fetch=EAGER)</xsd:appinfo>
	</xsd:annotation>
</xsd:element>
			]]></source>
			<p>An example of a (different) key-value annotation in xml:</p>
						<source><![CDATA[			
<property name="head">
	<one-to-one fetch="EAGER" target-entity="Head" optional="true" cascade="ALL" />
</property>
			]]></source>			
			<p>As you can see this example uses the property tag. The property tag is a convenience tag which
			can be used to in place of both an EAttribute and an EReference tag.</p>
		</section>
		<section id="multi">
			<title>Complex Annotation with multi-level structure</title>
			<p>An example of a more complex annotation is the 
			SecondaryTable annotation which can contain a pkJoinColumns annotation:</p>
			<source><![CDATA[
<xsd:annotation>
	<xsd:appinfo source="teneo.jpa">
		@SecondaryTable(name="THETONER" pkJoinColumns={@PrimaryKeyJoinColumn(name="PRINTER_ID")})
	</xsd:appinfo>
</xsd:annotation>
			]]></source>
			<p>An example of a (different) more complex annotation in xml:</p>
			<source><![CDATA[			
<eclass name="Employee">
	<association-override name="address">
		<join-column name="employee_address_id"/>
	</association-override>
</eclass>
			]]></source>			
			</section>
<!--			<section id="omondo"><title>Where/how to specify annotations in Omondo</title>
			<p>Double click on the element for which an annotation should be specified:</p>
			<figure src="../images/omondo1.jpg" alt="Omondo step 1"/>
			<p>Press Add in Annotations:</p>
			<figure src="../images/omondo2.jpg" alt="Omondo step 2"/>
			<p>Specify the Teneo annotation source in the annotations field. The http://... prefix will be removed from the view when you press enter:</p>
			<figure src="../images/omondo3.jpg" alt="Omondo step 3"/>
			<p>Press Add on the name/value attribute and specify one of the attributes for this annotation and press OK:</p>
			<figure src="../images/omondo4.jpg" alt="Omondo step 4"/>
			<p><br/></p>
			<figure src="../images/omondo5.jpg" alt="Omondo step 5"/>
			<p>and ready!</p>
			</section>
			<section id="rr">
				<title>Where to specify annotations in Rational Rose</title>
				<p>The image below illustrates where to specify annotations in Rational Rose:</p>
				<p>The ecore model properties (ecore A, ecore B) are added to Rational Rose using the <a href="../examples/ecore.pty">ecore.pty</a> file.</p>
				<figure src="../images/rose.jpg" alt="Setting annotations in Rational Rose"/>
			</section>
-->	</body>
</document>
