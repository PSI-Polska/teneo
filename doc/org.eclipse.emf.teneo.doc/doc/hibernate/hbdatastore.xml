<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (c) 2005, 2006 Springsite BV (The Netherlands) and others
	All rights reserved. This program and the accompanying materials
	are made available under the terms of the Eclipse Public License v1.0
	which accompanies this distribution, and is available at
	http://www.eclipse.org/legal/epl-v10.html
-->

<!--
	@author <a href="mtaal@elver.org">Martin Taal</a>
	@version $Revision: 1.2 $ $Date: 2006/09/13 16:05:49 $
-->

<!DOCTYPE document PUBLIC
	"-//APACHE//DTD Documentation V2.0//EN"
	"http://forrest.apache.org/dtd/document-v20.dtd">

<document> 
	<header> 
		<title>HbDataStore, HbContext and Runtime Options</title> 
	</header> 
	<body>
		<p>This page describes the functionality of the HbDataStore and describes how different parts of the Teneo runtime
		can be overridden by supplying your own specific implementation</p>
		<section id="HbDataStore">
			<title>The HbDataStore</title>
			<p>The HbDataStore object controls the persistence of a set of EPackage in a specific relational database. The HbDataStore
				contains a SessionFactory and is responsible for creating and updating the database schema.</p>
			<p>To create and initialize a HbDataStore, follow these steps:</p>
			<ol>
				<li>Create and register the HbDataStore using HbHelper.INSTANCE.createRegisterDataStore().</li>
				<li>Configure the EPackages to be handled by this DataStore using HbDataStore.setEPackages().</li>
				<li>Configure Hibernate properties for accessing the database. (Described
					<a href="tutorialone/tutorial1_2.html#Hibernate+database+configuration"> here</a>.)</li>
				<li>Call initialize() to build the Hibernate mapping and create the tables in the database.</li>
			</ol>
			<p>You can then obtain the Hibernate SessionFactory using HbDataStore.getSessionFactory().</p>
			<p>The HbDataStore can also be used to import and export xml and xmi through the importDataStore and exportDataStore
				methods.</p>
			<p>The HbDataStore has a specific method to retrieve all referers to a passed EObject: getCrossReferencers.</p>
		</section>
		<section id="hbcontext">
			<title>HbContext</title>
			<p>The The HbContext returns default implementations for Accessors, class names of Tuplizers and contains a method
			to create the Hibernate Configuration. HbContext is set in the HbDataStore using the setHbContext method, as a default the HbContextImpl is used.
			 You can extend HbContextImpl to override only specific methods.</p> 
		</section>
		<section id="overriding">
			<title>Overriding the HbDataStore</title>
			<p>In this release it is possible to override the HbDataStore with your own implementation. Next to the 
			specific implementation of the HbDataStore you also need to register a HbDataStoreFactory which creates this
			specific HbDataStore, the HbDataStoreFactory is registered through the HbHelper.setHbDataStoreFactory method.
			</p>
		</section>
		<section id="options">
			<title>Runtime Options</title>
			<p>Options are passed to the HbDataStore using a Properties object which is set using the HbDataStore.setPersistenceProperties method.</p>
			<p>The available options are all present in the <em>org.eclipse.emf.teneo.PersistenceOptions</em> class. See the <a href="options.html">options</a>
			page for a complete overview.</p>
		</section>
		<section><title>Getting the Hibernate Mapping XML</title>
			<p>There are two methods to get to the hibernate mapping xml programmatically.</p>
			<p>The mapping xml which has been generated by Teneo automatically (if no hibernate.hbm.xml file was specified explicitly)
			can be retrieved using the method: getMappingXML on the HbDataStore.</p>
			<p>The method HbHelper.INSTANCE.generateMapping(....) can be used to programmatically generate the mapping file.</p>
			<p>You can save the generated mapping xml to a file and then use that file. See the persistence option to tell Teneo to
			use the mapping file, <a href="options.html">here</a>.</p>
			<p>The third method to get the hibernate mapping xml is by right clicking on an ecore file and select the appropriate
			Teneo submenu option, see <a href="hibernate_details.html#orgeneration">here</a>. The
			disadvantage of this method is that it does not allow you to pass your own menu options.</p>
		</section>
	</body>
</document>
