<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright 2005-2006, Elver.org (http://www.elver.org).

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

		http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->

<!--
	@author <a href="mtaal@elver.org">Martin Taal</a>
	@version $Revision: 1.1 $ $Date: 2006/08/03 09:58:07 $
-->

<!DOCTYPE document PUBLIC
	"-//APACHE//DTD Documentation V2.0//EN"
	"http://forrest.apache.org/dtd/document-v20.dtd">

<document> 
	<header> 
		<title>Hibernate and Elver Extension Annotations</title> 
	</header> 
	<body>
		
		<section>
			<title>About</title>
			<p>In addition to the EJB3 annotations, Elver supports a number of custom annotations which are partially based
			on the Hibernate extensions: The hibernate specific annotation have the source hibernate.elver.org, the 
			Elver specific annotations have annotation.elver.org as a source.</p>
			<ul>
				<li><a href="#idbag">IdBag</a></li>
				<li><a href="#indexed">Indexed</a></li>
				<li><a href="#unique">Unique</a></li>
			</ul>
		</section>
		
		<section id="idbag">
			<title>IdBag Annotation</title>	
			<p>
				The IdBag annotation causes collections to be mapped to a Hibernate
				<a href="http://www.hibernate.org/hib_docs/v3/reference/en/html/collections.html#collections-idbag">&lt;idbag&gt;</a> element.
				The main advantage of an &lt;idbag&gt; is that it usually performs much faster than a regular &lt;bag&gt;.
			</p>
			<p>
				Note that &lt;idbags&gt; can only be used for</p>
			<ul>
				<li>value collections (for example a list of Strings)</li>
				<li>many-to-many entity relationships</li>
				<li>many-to-any entity relationships</li>
			</ul>
			<p>
				 One-to-many relationships are not supported by &lt;idbag&gt;.
			</p>
					<p><strong>Attributes</strong></p>
					<p>
						The IdBag annotation has the following attributes:
					</p>
					<ul>
						<li>
							<strong>IdBag.type</strong> (optional, default: "long")<br/>
							The type used for the ID column.
						</li>
						<li>
							<strong>IdBag.generator</strong> (optional, default: "increment")<br/>
							The generator used for the ID column.
							Note that in the current Hibernate implementation "native" cannot be used as an &lt;idbag&gt; generator.
						</li>
					</ul>
					<p></p>
					<p><strong>Example</strong></p>
					<p>
						The following XML Schema element:
					</p>
<source><![CDATA[<xsd:element name="role" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
	<xsd:annotation>
		<xsd:appinfo source="http://annotation.elver.org/IdBag">true</xsd:appinfo>
	</xsd:annotation>
</xsd:element>]]></source>
				<p>
					results in this Hibernate mapping:
				</p>
<source><![CDATA[<idbag name="role" lazy="true" cascade="all,delete-orphan">
	<collection-id column="ID" type="long">
		<generator class="increment"/>
	</collection-id>
	<key update="true">
		<column name="`ROLE_ID`" not-null="false" unique="false"/>
	</key>
	<element type="java.lang.String"/>
</idbag>]]></source>
		</section>
		
		<section id="type">
			<title>Type and Columns annotations</title>
			<p>
				The Type and Columns annotations are used in conjunction to map
				<a href="http://www.hibernate.org/hib_docs/v3/reference/en/html/mapping.html#mapping-types-custom">custom value types</a>
				to multiple columns.	
			</p>
			<p>
				<strong>Attributes</strong>
			</p>
			<ul>
				<li>
					<strong>Type.type (required)</strong><br/>
					The fully-qualified class name of the UserType.						
				</li>
				<li>
					<strong>Columns.value (required)</strong><br/>
					One or more Column annotations.
				</li>
			</ul>
			<p>
				<strong>Example</strong>
			</p>
			<p>
				In the example below the custom value type Name is mapped to the columns &quot;first_name&quot; and &quot;last_name&quot;.
			</p>
			<source>
<![CDATA[<xsd:simpleType name="Name" ecore:instanceClass="org.elver.samples.emf.hibernate.usertype.Name">
	<xsd:annotation>
		<xsd:appinfo source="http://hibernate.elver.org/Type" ecore:key="type">org.elver.samples.emf.hibernate.usertype.NameType</xsd:appinfo>
		<xsd:appinfo source="http://hibernate.elver.org/Columns" ecore:key="value">c1 c2</xsd:appinfo>
		<xsd:appinfo source="http://ejb.elver.org/Column/c1" ecore:key="name">first_name</xsd:appinfo>
		<xsd:appinfo source="http://ejb.elver.org/Column/c2" ecore:key="name">last_name</xsd:appinfo>
	</xsd:annotation>
	<xsd:restriction/>
</xsd:simpleType>
	
<xsd:complexType name="Person">
	<xsd:sequence>
		<xsd:element name="name" type="this:Name">
		</xsd:element>
	</xsd:sequence>
</xsd:complexType>]]>				
			</source>
		</section>
		
		<section id="indexed"><title>Indexed Annotation</title>
		<p>The http://annotation.elver.org/Indexed annotation can be used to signal to Elver that a certain association does
		not require an index column and has a bag like behavior. 
		See <a href="hibernate_relations.html#Mapping+non-indexed+relations">here</a>
		for more information.</p>
		</section>
		
		<section id="unique"><title>Unique Annotation</title>
		<p>The http://annotation.elver.org/Unique annotation can be used to signal to Elver that a certain one-to-many association is not 
		unique. This corresponds to a unidirectional one-to-many. This means that a join table should be used. 
		See <a href="hibernate_relations.html#Force+a+join+table+for+1%3An+relations">here</a>
		for more information.</p>
		</section>
		
	</body>
</document>
