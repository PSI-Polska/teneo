<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    targetNamespace="http://www.eclipse.org/emf/teneo/samples/emf/annotations/inheritancemapping"
	xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore"
    xmlns:ext="http://www.eclipse.org/emf/teneo/samples/emf/annotations/inheritancemapping">

	<!-- Tests:
	- Test different inheritance strategies in one project
	- Test annotations to direct inheritance strategy
	-->

   <xsd:complexType name="contentList">
   		<xsd:sequence>
   			<xsd:element name="name" type="xsd:string">
				 <xsd:annotation>
					<xsd:appinfo source="http://annotation.elver.org/Id">true</xsd:appinfo>
		    		</xsd:annotation>
			</xsd:element>
   			<xsd:element name="address" type="xsd:IDREF" ecore:reference="ext:Address" maxOccurs="unbounded"/>
   			<xsd:element name="price" type="xsd:IDREF" ecore:reference="ext:Price" maxOccurs="unbounded"/>
   		</xsd:sequence>
   </xsd:complexType>

   <!-- The price class hierarchy is always mapped to superclass -->
  	<xsd:complexType name="Price">
	 	<xsd:annotation>
			<xsd:appinfo source="http://annotation.elver.org/Table" ecore:key="name">myprice</xsd:appinfo>
			<xsd:appinfo source="http://annotation.elver.org/Inheritance" ecore:key="strategy">SINGLE_TABLE</xsd:appinfo>
			<xsd:appinfo source="http://annotation.elver.org/DiscriminatorColumn" ecore:key="name">DISCRIMINATOR</xsd:appinfo>
			<xsd:appinfo source="http://annotation.elver.org/DiscriminatorColumn" ecore:key="discriminatorType">STRING</xsd:appinfo>
			<xsd:appinfo source="http://annotation.elver.org/DiscriminatorValue" ecore:key="value">myPrice</xsd:appinfo>
	    </xsd:annotation>
   		<xsd:sequence>
   			<xsd:element name="name" type="xsd:string"/>
   			<xsd:element name="value" type="xsd:decimal"/>
   		</xsd:sequence>
  	</xsd:complexType>

  	<xsd:complexType name="InternationalPrice">
	 	<xsd:annotation>
			<xsd:appinfo source="http://annotation.elver.org/DiscriminatorValue" ecore:key="value">myInternationalPrice</xsd:appinfo>
	    </xsd:annotation>
    	<xsd:complexContent>
     		<xsd:extension base="ext:Price">
     			<xsd:sequence>
	        		<xsd:element name="currency" type="xsd:string"/>
	        	</xsd:sequence>
      		</xsd:extension>
    	</xsd:complexContent>
  	</xsd:complexType>
   
   <!-- The price class hierarchy is always mapped to joined-subclass -->
 	<xsd:complexType name="Address" abstract="true">
	 	<xsd:annotation>
			<xsd:appinfo source="http://annotation.elver.org/Inheritance" ecore:key="strategy">JOINED</xsd:appinfo>
	    </xsd:annotation>
 		<xsd:sequence>
      		<xsd:element name="name" type="xsd:string">
				 <xsd:annotation>
					<xsd:appinfo source="http://annotation.elver.org/Id">true</xsd:appinfo>
		    		</xsd:annotation>
			</xsd:element>
      		<xsd:element name="street" type="xsd:string"/>
      		<xsd:element name="city"   type="xsd:string"/>
    	</xsd:sequence>
  	</xsd:complexType>

  	<xsd:complexType name="USAddress">
	    	<xsd:complexContent>
	      		<xsd:extension base="ext:Address">
		        	<xsd:sequence>
		          		<xsd:element name="state" type="ext:USState"/>
		          		<xsd:element name="zip" type="xsd:positiveInteger" nillable="true"/>
		        	</xsd:sequence>
	      		</xsd:extension>
	    	</xsd:complexContent>
  	</xsd:complexType>

  	<xsd:complexType name="UKAddress">
    	<xsd:complexContent>
      		<xsd:extension base="ext:Address">
	        	<xsd:sequence>
	          		<xsd:element name="postcode" type="xsd:string"/>
	        	</xsd:sequence>
      		</xsd:extension>
    	</xsd:complexContent>
  	</xsd:complexType>

  	<xsd:complexType name="DistrictUKAddress">
    	<xsd:complexContent>
      		<xsd:extension base="ext:UKAddress">
	        	<xsd:sequence>
	          		<xsd:element name="district" type="xsd:string" nillable="true"/>
	        	</xsd:sequence>
      		</xsd:extension>
    	</xsd:complexContent>
  	</xsd:complexType>

  	<xsd:simpleType name="USState">
    	<xsd:restriction base="xsd:string">
      		<xsd:enumeration value="AK"/>
      		<xsd:enumeration value="AL"/>
      		<xsd:enumeration value="AR"/>
      		<!-- and so on ... -->
    	</xsd:restriction>
  	</xsd:simpleType>
 </xsd:schema>
