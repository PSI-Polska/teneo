/**
 * <copyright>
 * </copyright>
 *
 * $Id: ProductTypeValidator.java,v 1.1 2007/02/08 23:09:22 mtaal Exp $
 */
package org.eclipse.emf.teneo.samples.emf.elist.featuremap.validation;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.util.FeatureMap;

import org.eclipse.emf.teneo.samples.emf.elist.featuremap.PriceByQuantityType;
import org.eclipse.emf.teneo.samples.emf.elist.featuremap.ProductClassification;
import org.eclipse.emf.teneo.samples.emf.elist.featuremap.SupplierPriceType;
import org.eclipse.emf.teneo.samples.emf.elist.featuremap.TranslatedDescriptionType;

/**
 * A sample validator interface for {@link org.eclipse.emf.teneo.samples.emf.elist.featuremap.ProductType}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface ProductTypeValidator {
	boolean validate();

	boolean validateName(String value);
	boolean validateGroup(FeatureMap value);
	boolean validateDescription(EList<String> value);
	boolean validateTranslatedDescription(EList<TranslatedDescriptionType> value);
	boolean validateProductClassification(ProductClassification value);
	boolean validateGroup1(FeatureMap value);
	boolean validatePriceByQuantity(EList<PriceByQuantityType> value);
	boolean validatePriceFromSupplier(EList<SupplierPriceType> value);
	boolean validateSimplePrice(EList<Double> value);
}
